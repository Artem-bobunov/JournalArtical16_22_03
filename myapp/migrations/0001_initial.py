# Generated by Django 3.2.13 on 2023-03-31 08:44

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BezKn_oks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kh_BezKn_oks', models.CharField(blank=True, max_length=245, null=True, verbose_name='KH (ОКС)')),
                ('id_bezKn_oks', models.IntegerField(blank=True, null=True, verbose_name='id без КН (ОКС)')),
            ],
        ),
        migrations.CreateModel(
            name='DrugoiReg_oks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kh_DrugoiReg_oks', models.CharField(blank=True, max_length=245, null=True, verbose_name='KH (ОКС)')),
                ('adress', models.CharField(blank=True, max_length=4000, null=True, verbose_name='Адрес (ОКС)')),
                ('id_oks_DrugoiReg', models.IntegerField(blank=True, null=True, verbose_name='id Другого региона (ОКС)')),
            ],
        ),
        migrations.CreateModel(
            name='DrugoiReg_zu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kh_DrugoiReg_zu', models.CharField(blank=True, max_length=245, null=True, verbose_name='KH (ЗУ)')),
                ('adress_DrugoiReg_zu', models.CharField(blank=True, max_length=4000, null=True, verbose_name='Адрес (ЗУ)')),
                ('id_zu_DrugoiReg', models.IntegerField(blank=True, null=True, verbose_name='id Другого региона (ЗУ)')),
            ],
        ),
        migrations.CreateModel(
            name='Enk_oks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kh_Enk_oks', models.CharField(blank=True, max_length=245, null=True, verbose_name='KH (ОКС)')),
                ('id_enk_oks', models.IntegerField(blank=True, null=True, verbose_name='id ЕНК (ОКС)')),
            ],
        ),
        migrations.CreateModel(
            name='OtrSquaria_oks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kh_OtrSquaria_oks', models.CharField(blank=True, max_length=245, null=True, verbose_name='KH (ОКС)')),
                ('id_oks_otr', models.IntegerField(blank=True, null=True, verbose_name='id отрицательной S (ОКС)')),
            ],
        ),
        migrations.CreateModel(
            name='OtrSquaria_zu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kh_OtrSquaria_zu', models.CharField(blank=True, max_length=245, null=True, verbose_name='KH (ОКС)')),
                ('id_otrS_zu', models.IntegerField(blank=True, null=True, verbose_name='id Отрицательной S (ЗУ)')),
            ],
        ),
        migrations.CreateModel(
            name='UserName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('Александров Александр Александрович', 'Александров Александр Александрович'), ('Бобунов Артем Владимирович', 'Бобунов Артем Владимирович'), ('Деточенко Юлия Андреевна', 'Деточенко Юлия Андреевна'), ('Меликян Сюзанна Кареновна', 'Меликян Сюзанна Кареновна'), ('Бакулин Алексей Алексеевич', 'Бакулин Алексей Алексеевич'), ('Султанов Денис Шакирович', 'Султанов Денис Шакирович'), ('Леонтьева Ольга Петровна', 'Леонтьева Ольга Петровна'), ('Алиева Раиса Александровна', 'Алиева Раиса Александровна'), ('Липин Евгений Александрович', 'Липин Евгений Александрович'), ('Кряжева Юлия Александровна', 'Кряжева Юлия Александровна'), ('Губарь Анна Александровна', 'Губарь Анна Александровна'), ('Петрухина Ирина Павловна', 'Петрухина Ирина Павловна'), ('Пикина Ирина Борисовна', 'Пикина Ирина Борисовна'), ('Сологубова Анастасия Романовна', 'Сологубова Анастасия Романовна'), ('Филюкова Мария Михайловна', 'Филюкова Мария Михайловна'), ('Чепцова Александра Николаевна', 'Чепцова Александра Николаевна'), ('Сербина Татьяна Александровна', 'Сербина Татьяна Александровна'), ('Селеменчук Елена Владимировна', 'Селеменчук Елена Владимировна'), ('Акинтикова Екатерина Владимировна', 'Акинтикова Екатерина Владимировна'), ('Горбатикова Яна Евгеньевна', 'Горбатикова Яна Евгеньевна'), ('Катасонова Инга Юрьевна', 'Катасонова Инга Юрьевна'), ('Бородина Екатерина Вячеславовна', 'Бородина Екатерина Вячеславовна'), ('Волкова Арина Алексеевна', 'Волкова Арина Алексеевна'), ('Леонтьева Наталия Петровна', 'Леонтьева Наталия Петровна'), ('Мелкумян Валерия Евгеньевна', 'Мелкумян Валерия Евгеньевна'), ('Сологубов Михаил Алексеевич', 'Сологубов Михаил Алексеевич')], max_length=100, null=True)),
                ('departament', models.CharField(blank=True, choices=[('07', '07'), ('08', '08'), ('09', '09')], max_length=10, null=True, verbose_name='Отдел')),
            ],
        ),
        migrations.CreateModel(
            name='Uslovnye_oks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kh_Uslovnye_oks', models.CharField(blank=True, max_length=245, null=True, verbose_name='KH (ОКС)')),
                ('id_uslovnye_oks', models.IntegerField(blank=True, null=True, verbose_name='id условный (ОКС)')),
            ],
        ),
        migrations.CreateModel(
            name='RegData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateIshod', models.DateField(blank=True, null=True, verbose_name='Дата исходящая')),
                ('numberIshod', models.CharField(blank=True, default='№', max_length=50, null=True, verbose_name='Номер исходящего документа')),
                ('deteVoznikosnov', models.DateField(blank=True, null=True, verbose_name='Дата возникновения основания')),
                ('dateVhod', models.DateField(blank=True, null=True, verbose_name='Дата входящего')),
                ('numberVhod', models.CharField(blank=True, default='№', max_length=50, null=True, verbose_name='Номер входящего документа')),
                ('dateOtpravkiPoFz', models.DateField(blank=True, null=True, verbose_name='Дата отправки по ФЗ')),
                ('oks', models.CharField(blank=True, max_length=50, null=True, verbose_name='ОКС галочка')),
                ('zu', models.CharField(blank=True, max_length=50, null=True, verbose_name='ЗУ галочка')),
                ('nameAson_oks', models.CharField(blank=True, max_length=180, null=True, verbose_name='Название перечня в АСОН (ОКС)')),
                ('zagruzhenoOH_oks', models.IntegerField(blank=True, default=0, null=True, verbose_name='Загружено ОН (ОКС)')),
                ('poluchenoOH_oks', models.IntegerField(blank=True, default=0, null=True, verbose_name='Получено ОН (ОКС)')),
                ('povtornyhOH_oks', models.IntegerField(blank=True, default=0, null=True, verbose_name='Потворных ОН (ОКС)')),
                ('otrS_oks', models.IntegerField(blank=True, default=0, null=True, verbose_name='Отрицательная площадь (ОКС)')),
                ('drugoiReg_oks', models.IntegerField(blank=True, default=0, null=True, verbose_name='Другой регион (ОКС)')),
                ('uslovnye_oks', models.IntegerField(blank=True, default=0, null=True, verbose_name='Условные (ОКС)')),
                ('bezKn_oks', models.IntegerField(blank=True, default=0, null=True, verbose_name='Без КН (ОКС)')),
                ('enk_oks', models.IntegerField(blank=True, default=0, null=True, verbose_name='ЕНК (ОКС)')),
                ('nameAson_zu', models.CharField(blank=True, max_length=180, null=True, verbose_name='Название перечня в АСОН (ЗУ)')),
                ('zagruzhenoOH_zu', models.IntegerField(blank=True, default=0, null=True, verbose_name='Загружено ОН (ЗУ)')),
                ('poluchenoOH_zu', models.IntegerField(blank=True, default=0, null=True, verbose_name='Получено ОН (ЗУ)')),
                ('povtornyhOH_zu', models.IntegerField(blank=True, default=0, null=True, verbose_name='Потворных ОН (ЗУ)')),
                ('categoriy_zu', models.CharField(blank=True, max_length=50, null=True, verbose_name='Категории ЗУ - галочка')),
                ('sx', models.IntegerField(blank=True, default=0, null=True, verbose_name='СХ (ЗУ)')),
                ('np', models.IntegerField(blank=True, default=0, null=True, verbose_name='НП (ЗУ)')),
                ('oot', models.IntegerField(blank=True, default=0, null=True, verbose_name='ООТ (ЗУ)')),
                ('vf', models.IntegerField(blank=True, default=0, null=True, verbose_name='ВФ (ЗУ)')),
                ('nameSx', models.CharField(blank=True, max_length=180, null=True, verbose_name='Название СХ (ЗУ)')),
                ('nameNp', models.CharField(blank=True, max_length=180, null=True, verbose_name='Название НП (ЗУ)')),
                ('nameOot', models.CharField(blank=True, max_length=180, null=True, verbose_name='Название ООТ (ЗУ)')),
                ('nameVf', models.CharField(blank=True, max_length=180, null=True, verbose_name='Название ВФ (ЗУ)')),
                ('prom', models.IntegerField(blank=True, default=0, null=True, verbose_name='Пром (ЗУ)')),
                ('lf', models.IntegerField(blank=True, default=0, null=True, verbose_name='ЛФ (ЗУ)')),
                ('zz', models.IntegerField(blank=True, default=0, null=True, verbose_name='ЗЗ (ЗУ)')),
                ('bezCat', models.IntegerField(blank=True, default=0, null=True, verbose_name='Без кат (ЗУ)')),
                ('otrS_zu', models.IntegerField(blank=True, default=0, null=True, verbose_name='Отрицательная S (ЗУ)')),
                ('drugoiReg_zu', models.IntegerField(blank=True, default=0, null=True, verbose_name='Другой регион (ЗУ)')),
                ('uslovnye_zu', models.IntegerField(blank=True, default=0, null=True, verbose_name='Условные (ЗУ)')),
                ('obosoblennye', models.IntegerField(blank=True, default=0, null=True, verbose_name='Обособленные (ЗУ)')),
                ('number_act_oks', models.CharField(blank=True, max_length=150, null=True, verbose_name='№ акта ОКС')),
                ('number_act_zu', models.CharField(blank=True, max_length=150, null=True, verbose_name='№ акта ЗУ')),
                ('date_act_oks', models.DateField(blank=True, null=True, verbose_name='Дата акта ОКС')),
                ('date_act_zu', models.DateField(blank=True, null=True, verbose_name='Дата акта ЗУ')),
                ('count_ocenka_obj_oks', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количествол оцененных объектов ОКС')),
                ('count_ocenka_obj_zu', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количествол оцененных объектов ЗУ')),
                ('count_not_ocenka_obj_oks', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количествол неоцененных объектов ОКС')),
                ('count_not_ocenka_obj_zu', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количествол неоцененных объектов ЗУ')),
                ('date_output_oks', models.DateField(blank=True, null=True, verbose_name='дата фактической отправки ОКС')),
                ('date_output_zu', models.DateField(blank=True, null=True, verbose_name='дата фактической отправки ЗУ')),
                ('number_mail_oks', models.CharField(blank=True, max_length=150, null=True, verbose_name='Номер сопроводительного письма ОКС')),
                ('number_mail_zu', models.CharField(blank=True, max_length=150, null=True, verbose_name='Номер сопроводительного письма ЗУ')),
                ('fk_DrugoiReg_oks', models.ManyToManyField(to='myapp.DrugoiReg_oks')),
                ('fk_DrugoiReg_zu', models.ManyToManyField(to='myapp.DrugoiReg_zu')),
                ('fk_Enk_oks', models.ManyToManyField(to='myapp.Enk_oks')),
                ('fk_Kn_oks', models.ManyToManyField(to='myapp.BezKn_oks')),
                ('fk_OtrSquaria_oks', models.ManyToManyField(to='myapp.OtrSquaria_oks')),
                ('fk_OtrSquaria_zu', models.ManyToManyField(to='myapp.OtrSquaria_zu')),
                ('fk_Uslovnye_oks', models.ManyToManyField(to='myapp.Uslovnye_oks')),
            ],
        ),
    ]
